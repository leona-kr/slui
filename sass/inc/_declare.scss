@charset "UTF-8";


// *******************
// * z-index policy
// *******************
//	notice-container
$zNotice : 50000;

//	custom alert	20000	(기본 값 js에서 변경할 수 있는 옵션 있음)
$zAlert : 20000;

//	loader			10001
//	loader background	10000
$zLoader : 10000;

//	modal popup		3001
//	modal background	3000
$zModal : 3000;

//	header			2000~2999
//	navigation			2001
$zHeader : 2000;

//	expand layer	1000~
$zExpand : 1000;

//	dashboard scroll		200
//	content area			0~99
$zContent : 0;
//	 left area			100
$zLeft : $zContent + 100;


//*****************
//	variable
//*****************
$font-en: 'tahoma';
$min-width: 1200;
$min-popup-width: 600;
$top-height: 48;
$nav-height: 30;
$round: 3px;

@mixin font-m{font-family:'맑은 고딕', 'Malgun Gothic'}
@mixin font-d{font-family:'돋움',Dotum;}

	// main colors
$color-key1 : #693;

$color-danger : #f00;
$color-danger-medium : #ff9898;
$color-danger-light : #fde8e8;

$color-warning : #ff8400;
$color-warning-medium : #ffc07d;
$color-warning-light : #ffe7ce;

$color-attention : #ffc000;
$color-attention-medium : #ffdf7d;
$color-attention-light : #fff3ce;

$color-success : #89cf43;
$color-success-medium : #c3e79f;
$color-success-light : #e4f4d4;

$color-info : #09f;
$color-info-medium : #7dcbff;
$color-info-light : #daf3fd;

	// sub colors
$color-sky : #6dd0f7;
$color-sky-medium : #b5e7fb;
$color-sky-light : #daf3fd;

$color-violet : #9fa7ff;
$color-violet-medium : #ced2ff;
$color-violet-light : #e9eaff;

$color-purple : #c07cfe;
$color-purple-medium : #dfbcfe;
$color-purple-light : #f3e6ff;

$color-left-area : #555754;

$imgDir : '../../resources/imgs/';
//imgDir : '../imgs/';		// api document

//**********************
//	general mixin
//**********************

// generic transform
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	@include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

@mixin transition($transition...) {
	-moz-transition: $transition;
	-o-transition: $transition;
	-webkit-transition: $transition;
	transition: $transition;
}
@mixin transition-property($property...) {
	-moz-transition-property: $property;
	-o-transition-property: $property;
	-webkit-transition-property: $property;
	transition-property: $property;
}
@mixin transition-duration($duration...) {
	-moz-transition-property: $duration;
	-o-transition-property: $duration;
	-webkit-transition-property: $duration;
	transition-property: $duration;
}
@mixin transition-timing-function($timing...) {
	-moz-transition-timing-function: $timing;
	-o-transition-timing-function: $timing;
	-webkit-transition-timing-function: $timing;
	transition-timing-function: $timing;
}
@mixin transition-delay($delay...) {
	-moz-transition-delay: $delay;
	-o-transition-delay: $delay;
	-webkit-transition-delay: $delay;
	transition-delay: $delay;
}

@mixin calc($property, $expression) {
	#{$property}: -moz-calc(#{$expression});
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: calc(#{$expression});
}

@mixin rounded($radius: 0.5em) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin box-shadow($param) {
	-webkit-box-shadow:$param;
	-moz-box-shadow:$param;
	box-shadow:$param;
}

@mixin box-sizing($type:border-box){
	-webkit-box-sizing: $type;
	-moz-box-sizing: $type;
	box-sizing: $type;
}

@mixin opacity($value:0){
	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity="+$value+")";
	filter: alpha(opacity=$value);
	-moz-opacity:$value*0.01;
	-khtml-opacity:$value*0.01;
	opacity:$value*0.01;
}

@mixin linearGradient($from,$to){
	background: $to;
	background: -moz-linear-gradient(top, $from 0%, $to 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $from), color-stop(100%, $to));
	background: -webkit-linear-gradient(top, $from 0%, $to 100%);
	background: -o-linear-gradient(top, $from 0%, $to 100%);
	background: -ms-linear-gradient(top, $from 0%, $to 100%);
	background: linear-gradient(to bottom, $from 0%, $to 100%);
}

@mixin triangle($direction,$width,$height,$color){
	content:'';
	display:inline-block;
	vertical-align:middle;
	width:0;
	height:0;
	border-style:solid;
	@if $direction == up {
		border-width:0 $width*0.5 $height $width*0.5;
		border-color:transparent transparent $color;
	}
	@else if $direction == down {
		border-width:$height $width*0.5 0 $width*0.5;
		border-color:$color transparent transparent;
	}
	@else if $direction == left {
		border-width:$width $height*0.5 $height*0.5 0;
		border-color:transparent $color transparent;
	}
	@else if $direction == right {
		border-width:$width 0 $height*0.5 $height*0.5;
		border-color:transparent $color transparent;
	}
}

@function black($opacity){
	@return rgba(0,0,0,$opacity)
}
@function white($opacity){
	@return rgba(255,255,255,$opacity)
}



///**************************
//	created mixin
///**************************
@mixin clearafter{
	content:'';
	display:block;
	clear:both;
}

@mixin textHidden{
	text-indent:-999px;
	overflow:hidden;
}

@mixin ellipsis{
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin rounded($radius){
	-webkit-border-radius:$radius;
	-moz-border-radius:$radius;
	-ms-border-radius:$radius;
	border-radius:$radius;
}

@mixin imgStripe($x:0, $y:0, $bg:transparent){
	background:$bg url($imgDir+'img-stripe.png') no-repeat #{$x}px #{$y}px;
}

@mixin buttonStyle(){
	display:inline-block;
	@include box-sizing;
	min-width:65px;
	height:23px;
	line-height:20px;
	padding-left:10px;
	padding-right:10px;
	border-style:solid;
	border-width:1px;
	@include rounded($round);
	cursor:pointer;
	font-size:12px;
	@include font-m;
	text-align:center;
	text-decoration:none !important;
	white-space:nowrap;
}

@mixin grad-border-light($type:before){
	content:'';
	display:block;
	position:absolute;
	top:0;
	@if( $type == 'before'){
		left:0;
	}
	@else if($type == 'after'){
		right:0;
	}
	bottom:0;
	width:1px;
	background: -moz-linear-gradient(top, rgba(98,98,98,0) 16%, rgba(98,98,98,1) 50%, rgba(98,98,98,0) 84%);
	background: -webkit-linear-gradient(top, rgba(98,98,98,0) 16%,rgba(98,98,98,1) 50%,rgba(98,98,98,0) 84%);
	background: linear-gradient(to bottom, rgba(98,98,98,0) 16%,rgba(98,98,98,1) 50%,rgba(98,98,98,0) 84%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00626262', endColorstr='#00626262',GradientType=0 );
}
@mixin grad-border-dark($type:after){
	content:'';
	display:block;
	top:0;
	position:absolute;
	@if( $type == 'before'){
		left:0;
	}
	@else if($type == 'after'){
		right:0;
	}
	bottom:0;
	width:1px;
	background: -moz-linear-gradient(top, rgba(37,37,37,0) 16%, rgba(37,37,37,1) 50%, rgba(37,37,37,0) 84%);
	background: -webkit-linear-gradient(top, rgba(37,37,37,0) 16%,rgba(37,37,37,1) 50%,rgba(37,37,37,0) 84%);
	background: linear-gradient(to bottom, rgba(37,37,37,0) 16%,rgba(37,37,37,1) 50%,rgba(37,37,37,0) 84%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00252525', endColorstr='#00252525',GradientType=0 );
}

@mixin widget-header{
	position:relative;
	height:28px;
	line-height:28px;
	@include rounded($round $round 0 0);
	@include linearGradient(#555,#252525);
	color:#fff;
	font-weight:700;
	@include ellipsis;
}

@mixin widget-body{
	@include box-sizing;
	border-style:solid;
	border-color:#777;
	border-width:0 1px 1px;
	background-color:#fafafa;
	color:#000;
}

@mixin left-bg-fill($pos:fixed){
		content:'';
		display:block;
		position:$pos;
		top:0;
		left:0;
		bottom:0;
		width:200px;
		background:$color-left-area;
		z-index:-1;
}